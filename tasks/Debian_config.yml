---
- name: get status of systemd controlled processes
  service_facts:
  register: services_state
  when: uninstall_nginx is defined

- name: close firewalld ports for nginx if firewalld is running
  firewalld:
    service: nginx
    permanent: yes
    immediate: yes
    state: disabled
  when: services_state.ansible_facts.services['firewalld.service'] is defined and services_state.ansible_facts.services['firewalld.service'].state == "running" and uninstall_nginx is defined

- name: reload firewalld service
  command: firewalld-cmd --reload
  when: services_state.ansible_facts.services['firewalld.service'] is defined and services_state.ansible_facts.services['firewalld.service'].state == "running" and uninstall_nginx is defined

- name: Delete nginx directories
  file:
    path: "{{item}}"
    state: absent
  with_items:
    - /etc/nginx
    - /etc/systemd/system/nginx.service.d
    - /etc/firewalld/services/nginx.xml
    - /data
    - /var/data
  when: uninstall_nginx is defined

- name: "Adding custom dir: /var/data and subdirectories"
  file:
    name: "{{item}}"
    owner: jenkins
    group: jenkins
    state: directory
  with_items:
    - /var/data
    - /var/data/cache
    - /var/data/state
  when: uninstall_nginx is not defined

- name: Creating /data symlink
  file:
    name: /data
    state: link
    src: /var/data
  when: uninstall_nginx is not defined

- name: Copy custom nginx config to target(s)
  copy:
    src: nginx.conf
    dest: /etc/nginx/nginx.conf
    owner: nginx
    group: nginx
    mode: 0440
  when: uninstall_nginx is not defined

- name: create additional nginx/conf.d directory
  file:
    path: /etc/nginx/conf.d
    state: directory
    mode: 0750
    owner: nginx
    group: nginx
  when: uninstall_nginx is not defined

- name: create additional systemd directory needed for task below this
  file:
    path: /etc/systemd/system/nginx.service.d
    state: directory
    mode: 0755
    owner: root
    group: root
  when: uninstall_nginx is not defined

- name: copy up systemd file which will set LimitNOFILE to 30000
  copy:
    src: nginx.systemd.limitnofile
    dest: /etc/systemd/system/nginx.service.d/nginx.conf
    mode: 0644
    owner: root
    group: root
  when: uninstall_nginx is not defined

- name: get status of systemd controlled processes
  service_facts:
  register: services_state
  when: uninstall_nginx is not defined

- name: copy firewalld service definition file to target
  copy:
    src: firewalld-nginx-service-definition.xml
    dest: /etc/firewalld/services/nginx.xml
    owner: root
    group: root
    mode: '0640'
  when: services_state.ansible_facts.services['firewalld.service'] is defined and services_state.ansible_facts.services['firewalld.service'].state == "running" and uninstall_nginx is not defined

- name: add service definition to firewalld
  command: firewall-cmd --reload
  when: services_state.ansible_facts.services['firewalld.service'] is defined and services_state.ansible_facts.services['firewalld.service'].state == "running" and uninstall_nginx is not defined

- name: open firewalld ports for nginx if firewalld is running
  firewalld:
    service: nginx
    permanent: yes
    immediate: yes
    state: enabled
  when: services_state.ansible_facts.services['firewalld.service'] is defined and services_state.ansible_facts.services['firewalld.service'].state == "running" and uninstall_nginx is not defined
